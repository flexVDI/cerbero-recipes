# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python


class Recipe(recipe.Recipe):
    name = 'boost'
    version = '1.66.0'
    licenses = [License.GPLv2Plus]
    stype = SourceType.TARBALL
    btype = BuildType.CUSTOM
    _version = version.replace('.', '_')
    url = 'sf://%(name)s/%(name)s/%(version)s/%(name)s_{0}.tar.bz2'.format(_version)
    tarball_checksum = '5721818253e6a0989583192f96782c4a98eb6204965316df9f5ad75819225ca9'
    tarball_dirname = 'boost_' + _version

    def compile(self):
        libraries = [
            'system',
            'thread',
            'test'
        ]
        shell.new_call('./bootstrap.sh --prefix={0} --with-libraries={1}'.format(
                       self.config.prefix, ','.join(libraries)), self.build_dir, self.logfile)

    def install(self):
        options = ''
        if self.config.target_platform == Platform.WINDOWS:
            options = 'target-os=windows address-model=' + (
                '32' if self.config.target_arch == Architecture.X86 else '64')
            user_config = os.path.join(self.build_dir, 'tools', 'build', 'src', 'user-config.jam')
            gxx = os.path.join(self.config.toolchain_prefix, 'bin', 'x86_64-w64-mingw32-g++')
            opts = ': <compileflags>-m32 <linkflags>-m32 ' if self.config.target_arch == Architecture.X86 else ''
            with open(user_config, 'w') as f:
                f.write('using gcc : : {} {};'.format(gxx, opts))
        shell.new_call('./b2 {0} variant=release install'.format(options), self.build_dir, self.logfile)
